"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatepleroma_fe"]("app",{

/***/ "./src/modules/instance.js":
/*!*********************************!*\
  !*** ./src/modules/instance.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _services_style_setter_style_setter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/style_setter/style_setter.js */ \"./src/services/style_setter/style_setter.js\");\n/* harmony import */ var _services_theme_data_theme_data_service_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/theme_data/theme_data.service.js */ \"./src/services/theme_data/theme_data.service.js\");\n/* harmony import */ var _services_api_api_service_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../services/api/api.service.js */ \"./src/services/api/api.service.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./config.js */ \"./src/modules/config.js\");\n/* harmony import */ var _i18n_languages_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../i18n/languages.js */ \"./src/i18n/languages.js\");\n/* harmony import */ var _i18n_languages_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_i18n_languages_js__WEBPACK_IMPORTED_MODULE_9__);\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n\n\n\n\nvar SORTED_EMOJI_GROUP_IDS = ['smileys-and-emotion', 'people-and-body', 'animals-and-nature', 'food-and-drink', 'travel-and-places', 'activities', 'objects', 'symbols', 'flags'];\nvar REGIONAL_INDICATORS = function () {\n  var start = 0x1F1E6;\n  var end = 0x1F1FF;\n  var A = 'A'.codePointAt(0);\n  var res = new Array(end - start + 1);\n  for (var i = start; i <= end; ++i) {\n    var letter = String.fromCodePoint(A + i - start);\n    res[i - start] = {\n      replacement: String.fromCodePoint(i),\n      imageUrl: false,\n      displayText: 'regional_indicator_' + letter,\n      displayTextI18n: {\n        key: 'emoji.regional_indicator',\n        args: {\n          letter: letter\n        }\n      }\n    };\n  }\n  return res;\n}();\nvar REMOTE_INTERACTION_URL = '/main/ostatus';\nvar defaultState = {\n  // Stuff from apiConfig\n  name: 'Pleroma FE',\n  registrationOpen: true,\n  server: 'http://localhost:4040/',\n  textlimit: 5000,\n  themeData: undefined,\n  vapidPublicKey: undefined,\n  // Stuff from static/config.json\n  alwaysShowSubjectInput: true,\n  defaultAvatar: '/images/avi.png',\n  defaultBanner: '/images/banner.png',\n  background: '/static/aurora_borealis.jpg',\n  collapseMessageWithSubject: false,\n  greentext: false,\n  useAtIcon: false,\n  mentionLinkDisplay: 'short',\n  mentionLinkShowTooltip: true,\n  mentionLinkShowAvatar: false,\n  mentionLinkFadeDomain: true,\n  mentionLinkShowYous: false,\n  mentionLinkBoldenYou: true,\n  hideFilteredStatuses: false,\n  // bad name: actually hides posts of muted USERS\n  hideMutedPosts: false,\n  hideMutedThreads: true,\n  hideWordFilteredPosts: false,\n  hidePostStats: false,\n  hideBotIndication: false,\n  hideSitename: false,\n  hideUserStats: false,\n  muteBotStatuses: false,\n  modalOnRepeat: false,\n  modalOnUnfollow: false,\n  modalOnBlock: true,\n  modalOnMute: false,\n  modalOnDelete: true,\n  modalOnLogout: true,\n  modalOnApproveFollow: false,\n  modalOnDenyFollow: false,\n  modalOnRemoveUserFromFollowers: false,\n  loginMethod: 'password',\n  logo: '/static/logo.svg',\n  logoMargin: '.2em',\n  logoMask: true,\n  logoLeft: false,\n  disableUpdateNotification: true,\n  minimalScopesMode: false,\n  nsfwCensorImage: undefined,\n  postContentType: 'text/plain',\n  redirectRootLogin: '/main/friends',\n  redirectRootNoLogin: '/main/all',\n  scopeCopy: true,\n  showFeaturesPanel: true,\n  showInstanceSpecificPanel: false,\n  sidebarRight: false,\n  subjectLineBehavior: 'email',\n  theme: 'pleroma-dark',\n  virtualScrolling: true,\n  sensitiveByDefault: false,\n  conversationDisplay: 'linear',\n  conversationTreeAdvanced: false,\n  conversationOtherRepliesButton: 'below',\n  conversationTreeFadeAncestors: false,\n  maxDepthInThread: 6,\n  autocompleteSelect: false,\n  // Nasty stuff\n  customEmoji: [],\n  customEmojiFetched: false,\n  emoji: {},\n  emojiFetched: false,\n  unicodeEmojiAnnotations: {},\n  pleromaBackend: true,\n  postFormats: [],\n  restrictedNicknames: [],\n  safeDM: true,\n  knownDomains: [],\n  birthdayRequired: false,\n  birthdayMinAge: 0,\n  // Feature-set, apparently, not everything here is reported...\n  shoutAvailable: false,\n  pleromaChatMessagesAvailable: false,\n  gopherAvailable: false,\n  mediaProxyAvailable: false,\n  suggestionsEnabled: false,\n  suggestionsWeb: '',\n  // Html stuff\n  instanceSpecificPanelContent: '',\n  tos: '',\n  // Version Information\n  backendVersion: '',\n  frontendVersion: '',\n  pollsAvailable: false,\n  pollLimits: {\n    max_options: 4,\n    max_option_chars: 255,\n    min_expiration: 60,\n    max_expiration: 60 * 60 * 24\n  }\n};\nvar loadAnnotations = function loadAnnotations(lang) {\n  return __webpack_require__(\"./node_modules/@kazvmoe-infra/unicode-emoji-json/annotations lazy recursive ^\\\\.\\\\/.*\\\\.json$\")(\"./\".concat((0,_i18n_languages_js__WEBPACK_IMPORTED_MODULE_9__.langCodeToCldrName)(lang), \".json\")).then(function (k) {\n    return k[\"default\"];\n  });\n};\nvar injectAnnotations = function injectAnnotations(emoji, annotations) {\n  var availableLangs = Object.keys(annotations);\n  return _objectSpread(_objectSpread({}, emoji), {}, {\n    annotations: availableLangs.reduce(function (acc, cur) {\n      acc[cur] = annotations[cur][emoji.replacement];\n      return acc;\n    }, {})\n  });\n};\nvar injectRegionalIndicators = function injectRegionalIndicators(groups) {\n  var _groups$symbols;\n  (_groups$symbols = groups.symbols).push.apply(_groups$symbols, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(REGIONAL_INDICATORS));\n  return groups;\n};\nvar instance = {\n  state: defaultState,\n  mutations: {\n    setInstanceOption: function setInstanceOption(state, _ref) {\n      var name = _ref.name,\n        value = _ref.value;\n      if (typeof value !== 'undefined') {\n        state[name] = value;\n      }\n    },\n    setKnownDomains: function setKnownDomains(state, domains) {\n      state.knownDomains = domains;\n    },\n    setUnicodeEmojiAnnotations: function setUnicodeEmojiAnnotations(state, _ref2) {\n      var lang = _ref2.lang,\n        annotations = _ref2.annotations;\n      state.unicodeEmojiAnnotations[lang] = annotations;\n    }\n  },\n  getters: {\n    instanceDefaultConfig: function instanceDefaultConfig(state) {\n      return _config_js__WEBPACK_IMPORTED_MODULE_8__.instanceDefaultProperties.map(function (key) {\n        return [key, state[key]];\n      }).reduce(function (acc, _ref3) {\n        var _ref4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n        return _objectSpread(_objectSpread({}, acc), {}, (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, key, value));\n      }, {});\n    },\n    groupedCustomEmojis: function groupedCustomEmojis(state) {\n      var packsOf = function packsOf(emoji) {\n        var packs = emoji.tags.filter(function (k) {\n          return k.startsWith('pack:');\n        }).map(function (k) {\n          var packName = k.slice(5); // remove 'pack:' prefix\n          return {\n            id: \"custom-\".concat(packName),\n            text: packName\n          };\n        });\n        if (!packs.length) {\n          return [{\n            id: 'unpacked'\n          }];\n        } else {\n          return packs;\n        }\n      };\n      return state.customEmoji.reduce(function (res, emoji) {\n        packsOf(emoji).forEach(function (_ref5) {\n          var packId = _ref5.id,\n            packName = _ref5.text;\n          if (!res[packId]) {\n            res[packId] = {\n              id: packId,\n              text: packName,\n              image: emoji.imageUrl,\n              emojis: []\n            };\n          }\n          res[packId].emojis.push(emoji);\n        });\n        return res;\n      }, {});\n    },\n    standardEmojiList: function standardEmojiList(state) {\n      return SORTED_EMOJI_GROUP_IDS.map(function (groupId) {\n        return (state.emoji[groupId] || []).map(function (k) {\n          return injectAnnotations(k, state.unicodeEmojiAnnotations);\n        });\n      }).reduce(function (a, b) {\n        return a.concat(b);\n      }, []);\n    },\n    standardEmojiGroupList: function standardEmojiGroupList(state) {\n      return SORTED_EMOJI_GROUP_IDS.map(function (groupId) {\n        return {\n          id: groupId,\n          emojis: (state.emoji[groupId] || []).map(function (k) {\n            return injectAnnotations(k, state.unicodeEmojiAnnotations);\n          })\n        };\n      });\n    },\n    instanceDomain: function instanceDomain(state) {\n      return new URL(state.server).hostname;\n    },\n    remoteInteractionLink: function remoteInteractionLink(state) {\n      var server = state.server.endsWith('/') ? state.server.slice(0, -1) : state.server;\n      var link = server + REMOTE_INTERACTION_URL;\n      return function (_ref6) {\n        var statusId = _ref6.statusId,\n          nickname = _ref6.nickname;\n        if (statusId) {\n          return \"\".concat(link, \"?status_id=\").concat(statusId);\n        } else {\n          return \"\".concat(link, \"?nickname=\").concat(nickname);\n        }\n      };\n    }\n  },\n  actions: {\n    setInstanceOption: function setInstanceOption(_ref7, _ref8) {\n      var commit = _ref7.commit,\n        dispatch = _ref7.dispatch;\n      var name = _ref8.name,\n        value = _ref8.value;\n      commit('setInstanceOption', {\n        name: name,\n        value: value\n      });\n      switch (name) {\n        case 'name':\n          dispatch('setPageTitle');\n          break;\n        case 'shoutAvailable':\n          if (value) {\n            dispatch('initializeSocket');\n          }\n          break;\n        case 'theme':\n          dispatch('setTheme', value);\n          break;\n      }\n    },\n    getStaticEmoji: function getStaticEmoji(_ref9) {\n      return (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee() {\n        var commit, values, emoji;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref9.commit;\n              _context.prev = 1;\n              _context.next = 4;\n              return __webpack_require__.e(/*! import() | emoji */ \"emoji\").then(__webpack_require__.t.bind(__webpack_require__, /*! ../../static/emoji.json */ \"./static/emoji.json\", 19));\n            case 4:\n              values = _context.sent[\"default\"];\n              emoji = Object.keys(values).reduce(function (res, groupId) {\n                res[groupId] = values[groupId].map(function (e) {\n                  return {\n                    displayText: e.slug,\n                    imageUrl: false,\n                    replacement: e.emoji\n                  };\n                });\n                return res;\n              }, {});\n              commit('setInstanceOption', {\n                name: 'emoji',\n                value: injectRegionalIndicators(emoji)\n              });\n              _context.next = 13;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.warn(\"Can't load static emoji\");\n              console.warn(_context.t0);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 9]]);\n      }))();\n    },\n    loadUnicodeEmojiData: function loadUnicodeEmojiData(_ref10, language) {\n      var commit = _ref10.commit,\n        state = _ref10.state;\n      var langList = (0,_i18n_languages_js__WEBPACK_IMPORTED_MODULE_9__.ensureFinalFallback)(language);\n      return Promise.all(langList.map( /*#__PURE__*/function () {\n        var _ref11 = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2(lang) {\n          var annotations;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (state.unicodeEmojiAnnotations[lang]) {\n                  _context2.next = 11;\n                  break;\n                }\n                _context2.prev = 1;\n                _context2.next = 4;\n                return loadAnnotations(lang);\n              case 4:\n                annotations = _context2.sent;\n                commit('setUnicodeEmojiAnnotations', {\n                  lang: lang,\n                  annotations: annotations\n                });\n                _context2.next = 11;\n                break;\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.warn(\"Error loading unicode emoji annotations for \".concat(lang, \": \"), _context2.t0);\n                // ignore\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, null, [[1, 8]]);\n        }));\n        return function (_x) {\n          return _ref11.apply(this, arguments);\n        };\n      }()));\n    },\n    getCustomEmoji: function getCustomEmoji(_ref12) {\n      return (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee3() {\n        var commit, state, res, result, values, caseInsensitiveStrCmp, noPackLast, byPackThenByName, emoji;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref12.commit, state = _ref12.state;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return window.fetch('/api/pleroma/emoji.json');\n            case 4:\n              res = _context3.sent;\n              if (!res.ok) {\n                _context3.next = 17;\n                break;\n              }\n              _context3.next = 8;\n              return res.json();\n            case 8:\n              result = _context3.sent;\n              values = Array.isArray(result) ? Object.assign.apply(Object, [{}].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(result))) : result;\n              caseInsensitiveStrCmp = function caseInsensitiveStrCmp(a, b) {\n                var la = a.toLowerCase();\n                var lb = b.toLowerCase();\n                return la > lb ? 1 : la < lb ? -1 : 0;\n              };\n              noPackLast = function noPackLast(a, b) {\n                var aNull = a === '';\n                var bNull = b === '';\n                if (aNull === bNull) {\n                  return 0;\n                } else if (aNull && !bNull) {\n                  return 1;\n                } else {\n                  return -1;\n                }\n              };\n              byPackThenByName = function byPackThenByName(a, b) {\n                var packOf = function packOf(emoji) {\n                  return (emoji.tags.filter(function (k) {\n                    return k.startsWith('pack:');\n                  })[0] || '').slice(5);\n                };\n                var packOfA = packOf(a);\n                var packOfB = packOf(b);\n                return noPackLast(packOfA, packOfB) || caseInsensitiveStrCmp(packOfA, packOfB) || caseInsensitiveStrCmp(a.displayText, b.displayText);\n              };\n              emoji = Object.entries(values).map(function (_ref13) {\n                var _ref14 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref13, 2),\n                  key = _ref14[0],\n                  value = _ref14[1];\n                var imageUrl = value.image_url;\n                return {\n                  displayText: key,\n                  imageUrl: imageUrl ? state.server + imageUrl : value,\n                  tags: imageUrl ? value.tags.sort(function (a, b) {\n                    return a > b ? 1 : 0;\n                  }) : ['utf'],\n                  replacement: \":\".concat(key, \": \")\n                };\n                // Technically could use tags but those are kinda useless right now,\n                // should have been \"pack\" field, that would be more useful\n              }).sort(byPackThenByName);\n              commit('setInstanceOption', {\n                name: 'customEmoji',\n                value: emoji\n              });\n              _context3.next = 18;\n              break;\n            case 17:\n              throw res;\n            case 18:\n              _context3.next = 24;\n              break;\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.warn(\"Can't load custom emojis\");\n              console.warn(_context3.t0);\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 20]]);\n      }))();\n    },\n    setTheme: function setTheme(_ref15, themeName) {\n      var commit = _ref15.commit,\n        rootState = _ref15.rootState;\n      commit('setInstanceOption', {\n        name: 'theme',\n        value: themeName\n      });\n      (0,_services_style_setter_style_setter_js__WEBPACK_IMPORTED_MODULE_5__.getPreset)(themeName).then(function (themeData) {\n        commit('setInstanceOption', {\n          name: 'themeData',\n          value: themeData\n        });\n        // No need to apply theme if there's user theme already\n        var customTheme = rootState.config.customTheme;\n        if (customTheme) return;\n\n        // New theme presets don't have 'theme' property, they use 'source'\n        var themeSource = themeData.source;\n        if (!themeData.theme || themeSource && themeSource.themeEngineVersion === _services_theme_data_theme_data_service_js__WEBPACK_IMPORTED_MODULE_6__.CURRENT_VERSION) {\n          (0,_services_style_setter_style_setter_js__WEBPACK_IMPORTED_MODULE_5__.applyTheme)(themeSource);\n        } else {\n          (0,_services_style_setter_style_setter_js__WEBPACK_IMPORTED_MODULE_5__.applyTheme)(themeData.theme);\n        }\n      });\n    },\n    fetchEmoji: function fetchEmoji(_ref16) {\n      var dispatch = _ref16.dispatch,\n        state = _ref16.state;\n      if (!state.customEmojiFetched) {\n        state.customEmojiFetched = true;\n        dispatch('getCustomEmoji');\n      }\n      if (!state.emojiFetched) {\n        state.emojiFetched = true;\n        dispatch('getStaticEmoji');\n      }\n    },\n    getKnownDomains: function getKnownDomains(_ref17) {\n      return (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee4() {\n        var commit, rootState, result;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref17.commit, rootState = _ref17.rootState;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return _services_api_api_service_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].fetchKnownDomains({\n                credentials: rootState.users.currentUser.credentials\n              });\n            case 4:\n              result = _context4.sent;\n              commit('setKnownDomains', result);\n              _context4.next = 12;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.warn(\"Can't load known domains\");\n              console.warn(_context4.t0);\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 8]]);\n      }))();\n    }\n  }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instance);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/instance.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("a8d68a10b1889d108cac")
/******/ })();
/******/ 
/******/ }
);